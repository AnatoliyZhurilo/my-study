.grid-learn {
  width: calc(100% - 20px);
  border: 1px solid black;
  margin: 10px;

  display: grid;


  &__first {
    grid-template-columns: repeat(6, [col] 1fr);
    grid-template-rows: repeat(3, [row] 1fr);
    //grid-column-gap: 10px;
    //grid-row-gap: 10px;
    grid-gap: 20px;
    height: 800px;

    .grid-learn__item {
      &--1 {
        //background-color: red;

        //grid-column-start: 2;
        //grid-column-end: 4;

        grid-column: 1 / 3;
        //
        //grid-row-start: 2;
        //grid-row-end: 4;

        //grid-row: 2 / 4;
        ////

        //grid-area: 2 / 2 / 4 / 4; // row-start / col-start / row-end / col-end
      }

      &--2 {
        background-color: #8ce6ff;
        grid-column: 6 /  7;
      }

      &--3 {
        //background-color: green;
      }

      &--5 {
        //grid-column: 3 / 5;
        //grid-row: 1 / 3;

        grid-area: 1 / 3 / 3 / 5;
      }

      &--6 {
        grid-area: 1 / 5 / 3 / 6;
      }

      &--9 {
        grid-column: span 2;
      }

      &--10 {
        grid-column: span 2;
      }
    }
  }

  &__second {
    grid-template-columns: 1fr;
    grid-template-rows: 300px;

    justify-items: center; // not j-content  ну надо же))0)
    align-items: center;

    .grid-learn__item {
      //align-self: center;
      //justify-self: center;
    }
  }

  &__third {
    grid-template-columns: repeat(auto-fit, minmax(100px, auto));
    height: 100vh;
    grid-gap: 10px;
  }

  &__fourth {
    grid-template: repeat(4, 1fr) / repeat(4, 1fr);
    grid-auto-flow: row dense; // works similar to flex-direction
    // try with dense and without and you'll see how the items fill the area
    height: 400px;
    grid-gap: 10px;

    .grid-learn__item {
      &--2 {
        grid-column: 3 / 5;
      }
    }
  }

  &__last {
    height: 100vh;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(8, 1fr);

    grid-template-areas:'header header header header header'
                        'aside main main main main'
                        'aside main main main main'
                        'aside main main main main'
                        'aside main main main main'
                        'aside main main main main'
                        'aside main main main main'
                        'footer footer footer footer footer';

    header{grid-area: header}
    aside{grid-area: aside}
    main{grid-area: main}
    footer{grid-area: footer}

    :not(heheYeaBoi){ // check this selector, it applies styles to every child (except of 'p', which is here but I think there could be any tag, or even any word, so you won't affect ant existing tag)
      border-radius: 3px;
      box-shadow: 0px 0px 4px 0px black;
    }
  }

  &__item {
    //border: 1px solid black;
    border-radius: 3px;
    box-shadow: 0px 0px 4px 0px black;

  }
}
